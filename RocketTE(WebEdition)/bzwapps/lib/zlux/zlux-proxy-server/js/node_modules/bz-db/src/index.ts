
/**
 * globalThis doesn't exist in older version node.js (v10), so, we need play a trick here to compate different node versions
 */
declare var globalThis: NodeJS.Global;
declare var global: {
    globalThis: any
};
if ( typeof(globalThis) === 'undefined'){
    global.globalThis = global
}

import { BlueZoneDatabase } from "./internal-db/bluezone-database.js"
import { DatabaseMetadata, SelectConstraints, BulkLoadConstraints, PersistMethod, SyncMode, PersistType, DataStrategy } from "./main/metadata.js" // , ProcessPooling
import { DbManager } from './main/db-manager.js' //, start
import { Logger, ILoggerConfig } from './services/index.js'
import { ACTION } from './constants/actions.js'
import { BatchTxnData } from './main/db-interface.js'

let db_singleton: DbManager;
function loadDatabase(metadata: DatabaseMetadata): DbManager {
    if (!db_singleton){
        db_singleton = new DbManager(metadata);
        db_singleton.startWorker().then(() => {
            Logger.logInfo('DbManager started')
        }).catch((reason: any) => {
            console.error(reason)
            throw Error(reason)
        })
    }
    return db_singleton
}
 
function create(metadata: DatabaseMetadata): DbManager {
    const db = new DbManager(metadata);
    db.startWorker().then(() => {
        Logger.logInfo('DbManager started')
    }).catch((reason: any) => {
        console.error(reason)
        throw Error(reason)
    })
    // const db = await start(metadata)
    return db
}
 
export {
    DatabaseMetadata, 
    loadDatabase,
    create,
    SelectConstraints,
    BulkLoadConstraints,
    PersistMethod,
    SyncMode,
    PersistType,
    DataStrategy,
    // ProcessPooling,
    BlueZoneDatabase,
    DbManager,
    ACTION,
    BatchTxnData,
    ILoggerConfig
}

