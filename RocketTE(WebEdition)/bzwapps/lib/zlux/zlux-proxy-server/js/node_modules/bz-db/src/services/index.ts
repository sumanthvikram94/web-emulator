import { ILoggerConfig, loggers, LoggerConfigurer, ILogger, timeTracer } from './logger.js'
import { Utils } from './utils.js'
import { Encryption } from './encryption.js'
import { Status } from './status.js'
import { uid } from './unique-id.js'
import { CONFIG } from '../constants/config.js'
import { FileService } from './files.service.js'
import { EventLoopTracker, EluEvents } from 'perf-tracker'
import { FileWatcher } from './file-watcher.js'


// const status = new Status()
const elu = new EventLoopTracker({
    busy: CONFIG.EVENT_LOOP_BUSY_PERCENT,
    crazy: CONFIG.EVENT_LOOP_CRAZY_BUSY_PERCENT,
    doTrackPercent: true,
    doEmitAll: false,
    interval: CONFIG.EVENT_LOOP_SAMPLE_INTERVAL
});
let eluEnabled = false
const performanceLogger = loggers.performance
function enableElu() {
    if (eluEnabled) {
        return
    }
    eluEnabled = true
    elu.on(EluEvents.BUSY, (eu: number) => {
        performanceLogger.logInfo('Event loop busy - ' + (eu * 100).toFixed(2) + '%');
    })
    elu.on(EluEvents.NOTBUSY, (eu: number) => {
        performanceLogger.logInfo('Event loop decreasing - ' + (eu * 100).toFixed(2) + '%');
    })
    elu.on(EluEvents.CRAZY, (eu: number) => {
        performanceLogger.logWarn('Event loop is full - ' + (eu * 100).toFixed(2) + '%');
    })
    elu.on(EluEvents.NOTCRAZY, (eu: number) => {
        performanceLogger.logInfo('Event loop decreasing - ' + (eu * 100).toFixed(2) + '%');
    })
    elu.on(EluEvents.ABOVE_30, (eu: number) => {
        if (eu < 0.5) {
            performanceLogger.logInfo('Event loop above 30 - ' + (eu * 100).toFixed(2) + '%');
        }
    })
    elu.on(EluEvents.BELOW_30, (eu: number) => {
        performanceLogger.logInfo('Event loop below 30 - ' + (eu * 100).toFixed(2) + '%');
    })
    elu.on(EluEvents.ABOVE_50, (eu: number) => {
        if (eu < 0.7) {
            performanceLogger.logWarn('Event loop above 50 - ' + (eu * 100).toFixed(2) + '%');
        }
    })
    elu.on(EluEvents.BELOW_50, (eu: number) => {
        if (eu >= 0.3) {
            performanceLogger.logInfo('Event loop below 50 - ' + (eu * 100).toFixed(2) + '%');
        }
    })
    elu.on(EluEvents.ABOVE_70, (eu: number) => {
        if (eu < 0.9) {
            performanceLogger.logWarn('Event loop above 70 - ' + (eu * 100).toFixed(2) + '%');
        }
    })
    elu.on(EluEvents.BELOW_70, (eu: number) => {
        if (eu >= 0.5) {
            performanceLogger.logWarn('Event loop below 70 - ' + (eu * 100).toFixed(2) + '%');
        }
    })
    elu.on(EluEvents.ABOVE_90, (eu: number) => {
        performanceLogger.logWarn('Event loop above 90 - ' + (eu * 100).toFixed(2) + '%');
    })
    elu.on(EluEvents.BELOW_90, (eu: number) => {
        if (eu >= 0.7){
            performanceLogger.logWarn('Event loop below 90 - ' + (eu * 100).toFixed(2) + '%');
        }
    })
}

import { yaml } from './yaml.js'

const Logger = loggers.default

export {
    Utils, Encryption, Status, uid, FileService, elu, enableElu, FileWatcher, yaml, loggers, LoggerConfigurer, ILoggerConfig, ILogger, Logger, timeTracer
}
