import Queue from 'better-queue';
import { Logger } from '../services/index.js';
class TaskQueue {
    constructor() {
        this._q = new Queue(async (options, cb) => {
            if (!options || !options.task) {
                cb({ status: false, message: `Incorrect queue options` });
                return;
            }
            try {
                const task = options.task;
                // task.setTimeout()
                await task.execute();
                const result = await task.getPromise();
                cb(null, result);
            }
            catch (e) {
                Logger.logError(e);
                cb({ status: false, message: e.message });
            }
        }, { maxRetries: 0, retryDelay: 1000 });
        this._q.on('task_finish', (id, res) => {
            Logger.logDebug('task finish: ' + id);
            Logger.logDebug('task result: ' + res);
        });
        this._q.on('task_started', (id) => {
            Logger.logDebug('task started: ' + id);
        });
    }
    push(task) {
        return new Promise((resolve, reject) => {
            this._q.push({ task }, (err, result) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve(result);
                }
            });
        });
    }
}
export { TaskQueue };
