import { DataEntityMetadata } from '../main/metadata.js';

interface DataEntity {
    metadata: DataEntityMetadata;
    data: any;
    indexes: any;
    values: any[];
    keys: any[];
    storagePath: string;
    isLocked: boolean;
    execQueue?: any; // required?
    partitions: Map<string, any>
}

/**
 * Data records the changed files of a given data entity.
 */
class ChangeStatus {
    dataEntityName: string;
    fileNames: string[];
    
    constructor(deName: string, fileNames: string[]){
        this.dataEntityName = deName;
        this.fileNames = fileNames;
    }
}

interface DEStatistics {
    name: string
    stat?: string
    rowStatsHash?: string
    rowStats?: any[]
}

interface DEPartitions {
    dataEntityName: string;
    partitionCount: number;
    partitions: any[];
}


export {DataEntity, ChangeStatus, DEStatistics, DEPartitions}