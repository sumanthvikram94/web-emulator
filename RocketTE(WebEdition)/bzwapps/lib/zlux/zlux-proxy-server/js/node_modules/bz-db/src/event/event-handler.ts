import { EventEmitter } from 'events'
import { STATUS } from '../constants/status.js'

class EventHandler{

    private _emitter: EventEmitter
    public listenStatusMap: any = {};
    private _eventType = [STATUS.DATA_CONFLICT, 'internalDbReady'];
    public occuredEventMap: any = {};
    constructor(){
        this._emitter = new EventEmitter();
        this._eventType.forEach(e => {
            this.listenStatusMap[e] = false;
            this.occuredEventMap[e] = [];
        });
    }

    get emitter(){
        return this._emitter;
    }

    onEvent(cmd: string, callback: Function){
        this._emitter.on(cmd, (param) => {
            setImmediate(() => {
                if(callback){
                    callback(param);
                }
            });
        });
        this.listenStatusMap[cmd] = true;
        if(this.occuredEventMap[cmd].length > 0){
            this.occuredEventMap[cmd].forEach( (event:any) => {
                this._emitter.emit(event.cmd, event.parames);
            })
        }
    }
}
const eventHandler = new EventHandler()

export {
    eventHandler
}