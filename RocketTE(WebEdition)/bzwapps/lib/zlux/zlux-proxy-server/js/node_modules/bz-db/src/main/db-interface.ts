import { SelectConstraints, BulkLoadConstraints, TxnOps, SchemaType } from './metadata.js'

export interface DatabaseInterface{
    [key: string]: any;
    waitLoadReady():Promise<any>;
    insert(dataEntityName: string, value: any, isSilent?: boolean): Promise<any>;
    update(dataEntityName: string, filter:any, value: any, constraints?: SelectConstraints, isSilent?: boolean): Promise<any>;
    delete(dataEntityName: string, filter?: any, constraints?: SelectConstraints, isSilent?: boolean): Promise<any>;
    updateOrInsert(dataEntityName: any, value: any, isSilent?: boolean): Promise<any>;
    bulkLoad(dataEntityName: string, values: any[], constraint?: BulkLoadConstraints, isSilent?: boolean): Promise<any>;
    // selectSync(dataEntityName: string, filter?: Object, options?: Object): any;
    select(dataEntityName: string, filter?: Object, options?: Object): Promise<any>;
    selectNoPKData(dataEntityName: string, filter?: Object, options?: Object): Promise<any>;
    // batchTxn(batchTxnData: BatchTxnData): Promise<any>;
}

export interface InternalDatabaseInterface{
    [key: string]: any;
    waitLoadReady():Promise<any>;
    insert(dataEntityName: string, value: any, options?: TxnOps): Promise<any>;
    update(dataEntityName: string, filter:any, value: any, options?: TxnOps): Promise<any>;
    delete(dataEntityName: string, filter?: any, options?: TxnOps): Promise<any>;
    updateOrInsert(dataEntityName: any, value: any, options?: TxnOps): Promise<any>;
    bulkLoad(dataEntityName: string, values: any[], options?: TxnOps): Promise<any>;
    // selectSync(dataEntityName: string, filter?: Object, options?: Object): any;
    select(dataEntityName: string, filter?: Object, options?: Object): Promise<any>;
    selectNoPKData(dataEntityName: string, filter?: Object, options?: Object): Promise<any>;
    select(type:SchemaType,value:object, options?: TxnOps) : Promise<any>;
    // batchTxn(batchTxnData: BatchTxnData): Promise<any>;
}

export interface BatchTxnData{
    dataEntityName:string
    action:string
    value?:any
    options?:any
}