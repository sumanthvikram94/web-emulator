/// <reference types="node" />
/**
 * Sends message to peer
 *
 *
 */
import { PassThrough } from 'stream';
import { IPeerMeta, NodeMetadata } from './node-metadata.js';
import { Libp2p } from 'libp2p';
declare class MessageSenderWorker {
    peerInfo: IPeerMeta;
    peerInst: NodeMetadata;
    channel: string;
    inputStream: PassThrough;
    localNode: Libp2p;
    muxerStreamId: string;
    connectionId: string;
    constructor(peerInfo: IPeerMeta, channel: string, localNode: Libp2p);
    ensure(): Promise<void>;
    private ensurePeerInst;
    private getActiveConnection;
    private ensureMuxerStream;
    private createMuxerStream;
    private createInputStream;
    getInputStream(): PassThrough;
    private reCreateInputStream;
    sendString(msg: string): Promise<void>;
}
declare class MessageSender {
    workers: Map<string, MessageSenderWorker>;
    localNode: Libp2p;
    constructor(localNode: Libp2p);
    private getWorkerId;
    ensureSender(peerInfo: IPeerMeta, channel: string): Promise<MessageSenderWorker>;
    getInputStream(peerInfo: IPeerMeta, channel: string): Promise<PassThrough>;
    send(peerInfo: IPeerMeta, channel: string, msg: string): Promise<void>;
    printSenders(): void;
}
export { MessageSender };
