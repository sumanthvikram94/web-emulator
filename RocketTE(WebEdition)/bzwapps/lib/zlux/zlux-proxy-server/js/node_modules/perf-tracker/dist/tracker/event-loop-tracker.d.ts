/// <reference types="node" />
/// <reference types="node" />
import { EventLoopUtilization } from 'perf_hooks';
import { EventEmitter } from 'events';
export interface IEluConfig {
    busy: number;
    crazy: number;
    doTrackPercent: boolean;
    doEmitAll: boolean;
    interval: number;
}
export declare const EluEvents: {
    BUSY: string;
    NOTBUSY: string;
    CRAZY: string;
    NOTCRAZY: string;
    BELOW_10: string;
    ABOVE_10: string;
    BELOW_30: string;
    ABOVE_30: string;
    BELOW_50: string;
    ABOVE_50: string;
    BELOW_70: string;
    ABOVE_70: string;
    BELOW_90: string;
    ABOVE_90: string;
    SAMPLE: string;
};
/**
 * Event loop utilization tracker
 */
export declare class EventLoopTracker extends EventEmitter {
    private config;
    latestElu: EventLoopUtilization;
    isAbove10: boolean;
    isAbove30: boolean;
    isAbove50: boolean;
    isAbove70: boolean;
    isAbove90: boolean;
    isBusy: boolean;
    isCrazy: boolean;
    private eluTracker;
    constructor(config?: IEluConfig);
    stop(): void;
    emitSample(elu: EventLoopUtilization): void;
    setBusy(eu: number): void;
    setPercent(eu: number): void;
}
