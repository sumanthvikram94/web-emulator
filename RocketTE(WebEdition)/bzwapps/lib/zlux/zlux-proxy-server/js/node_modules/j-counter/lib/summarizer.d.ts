/// <reference types="node" />
import { HourSummary } from './summary';
import { Counter } from './counter';
import { EventEmitter } from 'events';
export declare class Summarizer extends EventEmitter {
    sumaryLoop: any;
    summary: Map<number, HourSummary>;
    prevCut: object;
    counter: Counter;
    keepRecords: number;
    sumReducer: (accumulator: number, currentValue: number) => number;
    constructor(counter: Counter, keepRecords?: number);
    trigger(interval?: number): void;
    triggerSummarize(): void;
    clearRecords(): void;
    summarize(beginMin: number, endMin: number, hour: number): void;
    getHourSummary(hour: number): {
        hour: number;
        peak: number;
        avg: number;
    };
    getSummaryObj(hour: number): HourSummary;
    getSummary(): Map<number, HourSummary>;
    destroy(): void;
}
