"use strict";
//import { FileInfo, FileType } from "./FileInfo"
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformList = exports.parseLine = exports.testLine = void 0;
//const JA_MONTH = "\u6708"
//const JA_DAY   = "\u65e5"
//const JA_YEAR  = "\u5e74"
const RE_LINE = new RegExp(
// Name     VV.MM   Created       Changed      Size  Init   Mod   Id
//TESTJOB   01.00 2010/05/04 2010/05/04 11:07     7     7     0 PDFUGE  
"(\\S+)" // Name
    + "\\s+" // separator
    + "(\\S+)" // VV.MM
    + "\\s+" // separator
    + "(" +
    "(?:\\d+[-/]\\d+[-/]\\d+)" + // yyyy-mm-dd
    //"|(?:\\S{3}\\s+\\d{1,2})" +  // MMM [d]d
    //"|(?:\\d{1,2}\\s+\\S{3})" + // [d]d MMM
    //"|(?:\\d{1,2}" + JA_MONTH + "\\s+\\d{1,2}" + JA_DAY + ")"+
    "|(?:\\*{2}\\w*\\*{2})" +
    ")"
    + "\\s+" // separator
    + "(" +
    "(?:\\d+[-/]\\d+[-/]\\d+)" + // yyyy-mm-dd
    //"|(?:\\S{3}\\s+\\d{1,2})" +  // MMM [d]d
    //"|(?:\\d{1,2}\\s+\\S{3})" + // [d]d MMM
    //"|(?:\\d{1,2}" + JA_MONTH + "\\s+\\d{1,2}" + JA_DAY + ")"+
    "|(?:\\*{2}\\w*\\*{2})" +
    ")"
    + "\\s+" // separator
    + "(\\S+)" // time
    + "\\s+" // separator
    + "(\\d+)" // Size
    + "\\s+" // separator
    + "(\\d+)" // Init
    + "\\s+" // separator
    + "(\\d+)" // Mod
    + "\\s+" // separator
    + "(\\S+)" // Id
);
/**
 * Returns true if a given line might be a MVS-style listing.
 *
  */
function testLine(line, ftp) {
    ftp.log("testline: " + line);
    if (line == " Name     VV.MM   Created       Changed      Size  Init   Mod   Id") {
        return true;
    }
    return false;
    //return RE_LINE.test(line)
}
exports.testLine = testLine;
/**
 * Parse a single line of a MVS-style directory listing.
 */
function parseLine(line, ftp) {
    ftp.log(line);
    let obj = {};
    if (line.trim().length < 20) {
        obj.Name = line;
        obj["VV.MM"] = "";
        obj.Created = "";
        obj.Changed = "";
        obj.Size = "";
        obj.Init = "";
        obj.Mod = "";
        obj.Id = "";
        obj.type = "file";
        return obj;
    }
    else {
        const groups = line.match(RE_LINE);
        if (groups === null) {
            return undefined;
        }
        const name = groups[1];
        obj.Name = name;
        obj["VV.MM"] = groups[2];
        obj.Created = groups[3];
        obj.Changed = groups[4] + " " + groups[5];
        obj.Size = groups[6];
        obj.Init = groups[7];
        obj.Mod = groups[8];
        obj.Id = groups[9];
        obj.type = "file";
        return obj;
    }
}
exports.parseLine = parseLine;
function transformList(files) {
    return files;
}
exports.transformList = transformList;
