"use strict";
//import { FileInfo, FileType } from "./FileInfo"
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformList = exports.parseLine = exports.testLine = void 0;
//const JA_MONTH = "\u6708"
//const JA_DAY   = "\u65e5"
//const JA_YEAR  = "\u5e74"
const RE_LINE = new RegExp(
/*
ZTEAM-12189
JOBNAME  JOBID    OWNER    STATUS
USER1J	JOB00072	USER1	OUTPUT	A		(JCL error) 3 spool files
USER1A	JOB00033	USER1	OUTPUT	A		RC=000 5 spool files
USER1	TSU00024	USER1	ACTIVE	TSU
USER1W	JOB00113	USER1	INPUT	A		-DUP-
MJONES   TSU03321 MJONES   OUTPUT TSU      RC=0000 1 spool files
MJONES1  JOB03322 MJONES   OUTPUT A        RC=0000 4 spool files
*/
"(\\S+)" // JOBNAME
    + "\\s+" // separator
    + "(\\S+)" // JOBID
    + "\\s+" // separator
    + "(\\S+)" // OWNER
    + "\\s+" // separator
    + "(\\S+)" // STATUS
    + "\\s+" // separator
    + "(\\S+)" // CLASS
    + "\\s+" // separator
    + "(.*)"); // RESULT
/**
 * Returns true if a given line might be a MVS-style listing.
 *
  */
function testLine(line) {
    if (line == "JOBNAME  JOBID    OWNER    STATUS CLASS") {
        return true;
    }
    return false;
    //return RE_LINE.test(line)
}
exports.testLine = testLine;
/**
 * Parse a single line of a MVS-style directory listing.
 */
function parseLine(line) {
    if (line == "JOBNAME  JOBID    OWNER    STATUS CLASS")
        return undefined;
    const groups = line.match(RE_LINE);
    if (groups === null) {
        return undefined;
    }
    let obj = {};
    obj["Job ID"] = groups[2];
    obj["Job Name"] = groups[1];
    obj.Owner = groups[3];
    obj.Status = groups[4];
    obj.Class = groups[5];
    obj.Result = groups[6];
    obj.type = "file";
    return obj;
}
exports.parseLine = parseLine;
function transformList(files) {
    return files;
}
exports.transformList = transformList;
