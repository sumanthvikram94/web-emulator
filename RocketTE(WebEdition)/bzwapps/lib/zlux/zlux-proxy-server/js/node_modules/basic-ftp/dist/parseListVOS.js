"use strict";
//import { FileInfo, FileType } from "./FileInfo"
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformList = exports.parseLine = exports.testLine = void 0;
//const JA_MONTH = "\u6708"
//const JA_DAY   = "\u65e5"
//const JA_YEAR  = "\u5e74"
const RE_LINE = new RegExp(
/*
//The List from the server includes blank lines for some reason

Files: 1  Blocks: 1

w      1  seq       09-05-20 15:28:06  Testingstxt


Dirs: 14

m      1  07-08-29 11:50:06  271
n      1  07-10-10 15:44:31  276I
m      1  07-08-29 11:50:06  277
m     13  09-05-20 07:12:51  5001
m     16  09-05-20 07:14:40  835
n     48  09-05-19 18:02:08  837I
n      1  07-07-02 20:04:15  edit_input
m      1  08-07-14 20:00:08  espr
m     22  09-05-20 07:11:56  fa
n      1  07-07-02 20:04:14  raw_input
n      1  07-07-02 20:04:14  recon
n      1  07-07-02 20:04:15  rpt
m     48  09-05-19 18:01:36  x12_bal
n     48  09-05-20 15:31:37  x12_raw

Links: 0
*/
"(.)" // Type
    + "\\s+" // separator
    + "(\\d+)" // Size
    + "\\s+" // separator
    + "(?:(\\D+)\\s+)?" // Not sure
    + "(\\d+[-/]\\d+[-/]\\d+)" // Day-Month-Year
    + "\\s+" // separator
    + "(\\S+)" // Time
    + "\\s+" // separator    
    + "(.*)"); // Name
const RE_LINE2 = new RegExp(
//Files: 1  Blocks: 1
"(Files: )"
    + "(\\d+)"
    + "\\s+"
    + "(Blocks: )"
    + "(\\d+)");
const RE_LINE3 = new RegExp(
//Dirs: 14
//Links: 0
"(Dirs: |Links: )"
    + "(\\d+)");
/**
 * Returns true if a given line might be a MVS-style listing.
 *
  */
function testLine(line) {
    if (line == "")
        return true;
    if (RE_LINE.test(line))
        return true;
    if (RE_LINE2.test(line))
        return true;
    if (RE_LINE3.test(line))
        return true;
    return false;
}
exports.testLine = testLine;
/**
 * Parse a single line of a MVS-style directory listing.
 */
function parseLine(line, ftp) {
    let groups = line.match(RE_LINE);
    ftp.log(groups);
    if (groups === null) {
        return undefined;
    }
    let obj = {};
    obj.Name = groups[6];
    obj.Size = groups[2];
    obj.Date = groups[4] + " " + groups[5];
    if ((groups[1] == 'm') || (groups[1] == 'n'))
        obj.type = "folder";
    else
        obj.type = "file";
    return obj;
}
exports.parseLine = parseLine;
function transformList(files) {
    return files;
}
exports.transformList = transformList;
