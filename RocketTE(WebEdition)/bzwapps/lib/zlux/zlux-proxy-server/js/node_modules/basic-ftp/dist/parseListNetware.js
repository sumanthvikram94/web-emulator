"use strict";
//import { FileInfo, FileType } from "./FileInfo"
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformList = exports.parseLine = exports.testLine = void 0;
//const JA_MONTH = "\u6708"
//const JA_DAY   = "\u65e5"
//const JA_YEAR  = "\u5e74"
const RE_LINE = new RegExp(
/*
type rights owner size time name

where the above variables stand for the following:

Type: Type of file, where (-) indicates a file and (d) indicates a directory.
Rights: The file owner's effective NetWare rights of this file or directory.
Owner: NetWare user who created this file or directory. In case the mapping of objects and the owner's name is not found, the object ID is displayed.
Size: The size, in bytes, of the file or directory. In case of a directory, it is always 512.
Time: The modification date and time of the file or directory.
Name: The name of the file or directory in the current name space.
*/
"(-|d)" // Type
    + "\\s+" // separator
    + "(\\S+)" // Rights
    + "\\s+" // separator
    + "(\\S+)" // Owner
    + "\\s+" // separator
    + "(\\d+)" // Size
    + "\\s+" // separator
    + "(\\S{3}\\s+\\d{1,2})" // MMM [d]d
    + "\\s+" // separator
    + "(" +
    "(?:\\d{1,2}:\\d{1,2})" + // hh:mm
    "|(?:\\d{4})" + // YYYY
    ")"
    + "\\s+" // separator    
    + "(.*)"); // Name
/**
 * Returns true if a given line might be a MVS-style listing.
 *
  */
function testLine(line, ftp) {
    ftp.log("testLine: " + line);
    return RE_LINE.test(line);
}
exports.testLine = testLine;
/**
 * Parse a single line of a MVS-style directory listing.
 */
function parseLine(line, ftp) {
    ftp.log("parseLine: " + line);
    let groups = line.match(RE_LINE);
    ftp.log(groups);
    if (groups === null) {
        return undefined;
    }
    let obj = {};
    obj.Name = groups[7];
    obj.Size = groups[4];
    obj.Date = groups[5] + " " + groups[6];
    obj.Permissions = groups[2];
    obj.Owner = groups[3];
    if (groups[1] == 'd')
        obj.type = "folder";
    else
        obj.type = "file";
    return obj;
}
exports.parseLine = parseLine;
function transformList(files) {
    return files;
}
exports.transformList = transformList;
